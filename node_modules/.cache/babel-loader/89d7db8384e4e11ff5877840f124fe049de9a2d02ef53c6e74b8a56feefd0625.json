{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teampall\\\\Documents\\\\Davida-React\\\\src\\\\components\\\\EditableContent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { useContent } from '../contexts/ContentContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableContainer = styled.div`\n  position: relative;\n  padding: 5px;\n  margin: 5px 0;\n  border: 1px dashed transparent;\n  \n  &:hover {\n    border-color: #007bff;\n  }\n`;\n_c = EditableContainer;\nconst EditButton = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 10px;\n  cursor: pointer;\n  opacity: 0;\n  \n  ${EditableContainer}:hover & {\n    opacity: 1;\n  }\n`;\n_c2 = EditButton;\nconst TextArea = styled.textarea`\n  width: 100%;\n  min-height: 100px;\n  padding: 10px;\n  margin: 5px 0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n_c3 = TextArea;\nconst SaveButton = styled.button`\n  background: #28a745;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 15px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n_c4 = SaveButton;\nconst EditableContent = ({\n  contentKey,\n  defaultValue,\n  type = 'text'\n}) => {\n  _s();\n  const {\n    content,\n    updateContent\n  } = useContent();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editValue, setEditValue] = useState(content[contentKey] || defaultValue);\n  const handleSave = () => {\n    updateContent(contentKey, editValue);\n    setIsEditing(false);\n  };\n  const handleChange = e => {\n    setEditValue(e.target.value);\n  };\n  if (isEditing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [type === 'text' ? /*#__PURE__*/_jsxDEV(TextArea, {\n        value: editValue,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editValue,\n        onChange: handleChange,\n        placeholder: \"URL da imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n        onClick: handleSave,\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EditableContainer, {\n    children: [type === 'text' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content[contentKey] || defaultValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: content[contentKey] || defaultValue,\n      alt: \"\",\n      style: {\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n      onClick: () => setIsEditing(true),\n      children: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableContent, \"BRRy1Rk0UqRI9P060SR6JJA2TcY=\", false, function () {\n  return [useContent];\n});\n_c5 = EditableContent;\nexport default EditableContent;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"EditableContainer\");\n$RefreshReg$(_c2, \"EditButton\");\n$RefreshReg$(_c3, \"TextArea\");\n$RefreshReg$(_c4, \"SaveButton\");\n$RefreshReg$(_c5, \"EditableContent\");","map":{"version":3,"names":["React","useState","styled","useContent","jsxDEV","_jsxDEV","EditableContainer","div","_c","EditButton","button","_c2","TextArea","textarea","_c3","SaveButton","_c4","EditableContent","contentKey","defaultValue","type","_s","content","updateContent","isEditing","setIsEditing","editValue","setEditValue","handleSave","handleChange","e","target","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","src","alt","style","maxWidth","_c5","$RefreshReg$"],"sources":["C:/Users/Teampall/Documents/Davida-React/src/components/EditableContent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useContent } from '../contexts/ContentContext';\r\n\r\nconst EditableContainer = styled.div`\r\n  position: relative;\r\n  padding: 5px;\r\n  margin: 5px 0;\r\n  border: 1px dashed transparent;\r\n  \r\n  &:hover {\r\n    border-color: #007bff;\r\n  }\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  \r\n  ${EditableContainer}:hover & {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  padding: 10px;\r\n  margin: 5px 0;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst SaveButton = styled.button`\r\n  background: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 5px 15px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n`;\r\n\r\ninterface EditableContentProps {\r\n  contentKey: string;\r\n  defaultValue: string;\r\n  type?: 'text' | 'image';\r\n}\r\n\r\nconst EditableContent: React.FC<EditableContentProps> = ({\r\n  contentKey,\r\n  defaultValue,\r\n  type = 'text'\r\n}) => {\r\n  const { content, updateContent } = useContent();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editValue, setEditValue] = useState(content[contentKey] || defaultValue);\r\n\r\n  const handleSave = () => {\r\n    updateContent(contentKey, editValue);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    setEditValue(e.target.value);\r\n  };\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <div>\r\n        {type === 'text' ? (\r\n          <TextArea\r\n            value={editValue}\r\n            onChange={handleChange}\r\n          />\r\n        ) : (\r\n          <input\r\n            type=\"text\"\r\n            value={editValue}\r\n            onChange={handleChange}\r\n            placeholder=\"URL da imagem\"\r\n          />\r\n        )}\r\n        <SaveButton onClick={handleSave}>Salvar</SaveButton>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <EditableContainer>\r\n      {type === 'text' ? (\r\n        <div>{content[contentKey] || defaultValue}</div>\r\n      ) : (\r\n        <img src={content[contentKey] || defaultValue} alt=\"\" style={{ maxWidth: '100%' }} />\r\n      )}\r\n      <EditButton onClick={() => setIsEditing(true)}>Editar</EditButton>\r\n    </EditableContainer>\r\n  );\r\n};\r\n\r\nexport default EditableContent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}